version: '3.8'

services:
 # Airflow services
 airflow-webserver:
   image: apache/airflow:2.7.1
   depends_on:
     - postgres
     - redis
   environment:
     - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
     - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
     - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
     - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
   volumes:
     - ./dags:/opt/airflow/dags
     - ./logs:/opt/airflow/logs
   ports:
     - "8080:8080"
   healthcheck:
     test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
     interval: 30s
     timeout: 10s
     retries: 3
   restart: always

 airflow-scheduler:
   image: apache/airflow:2.7.1
   depends_on:
     - airflow-webserver
   environment:
     - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
     - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
     - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
     - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
   volumes:
     - ./dags:/opt/airflow/dags
     - ./logs:/opt/airflow/logs
   restart: always

 airflow-worker:
   image: apache/airflow:2.7.1
   depends_on:
     - airflow-scheduler
   environment:
     - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
     - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
     - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
     - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
   volumes:
     - ./dags:/opt/airflow/dags
     - ./logs:/opt/airflow/logs
   restart: always

 # DBT service
 dbt:
   build:
     context: ./dbt
     dockerfile: Dockerfile
   depends_on:
     - postgres
   volumes:
     - ./dbt:/dbt
   environment:
     - DBT_PROFILES_DIR=/dbt/profiles
     - DBT_PROJECT_DIR=/dbt

 # PostgreSQL service  
 postgres:
   image: postgres:16
   environment:
     - POSTGRES_USER=airflow
     - POSTGRES_PASSWORD=airflow
     - POSTGRES_DB=airflow
   volumes:
     - postgres-data:/var/lib/postgresql/data
   ports:
     - "5432:5432"
   healthcheck:
     test: ["CMD", "pg_isready", "-U", "airflow"]
     interval: 5s
     retries: 5
   restart: always

 # Redis service
 redis:
   image: redis:7
   ports:
     - "6379:6379"
   healthcheck:
     test: ["CMD", "redis-cli", "ping"]
     interval: 5s
     timeout: 30s
     retries: 50
   restart: always

 # FastAPI service
 fastapi:
   build:
     context: ./backend
     dockerfile: Dockerfile
   ports:
     - "8000:8000"
   depends_on:
     - postgres
   environment:
     - DATABASE_URL=postgresql://airflow:airflow@postgres:5432/airflow
   volumes:
     - ./backend:/app
   restart: always

 # Frontend service
 frontend:
   build:
     context: ./frontend
     dockerfile: Dockerfile
   ports:
     - "3000:3000"
   depends_on:
     - fastapi
   volumes:
     - ./frontend:/app
   environment:
     - NEXT_PUBLIC_API_URL=http://fastapi:8000
   restart: always

volumes:
 postgres-data: